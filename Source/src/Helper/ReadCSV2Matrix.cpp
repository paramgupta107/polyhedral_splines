/* copyright(c)Jorg Peters [jorg.peters@gmail.com] */

#include "ReadCSV2Matrix.hpp"
#include <sstream>
#include <iostream>
#include <string>
#include <unordered_map>

// Forward-declared by embedded_tables.cpp (generated by CMake)
const std::unordered_map<std::string, const char*>& get_embedded_tables();

Matrix read_csv_as_matrix(const std::string& a_File, const int a_Rows, const int a_Cols)
{
    const auto& table_map = get_embedded_tables();
    auto it = table_map.find(a_File);

    if (it == table_map.end())
    {
        std::cerr << "Error: Embedded table '" << a_File << "' not found." << std::endl;
        std::terminate();  // or throw if preferred
    }

    std::istringstream t_Stream(it->second);
    std::string t_Line;
    int t_Row = 0;
    Matrix t_Matrix(a_Rows, a_Cols);

    while (std::getline(t_Stream, t_Line) && t_Row < a_Rows)
    {
        if (t_Line.empty() || t_Line[0] == '#') continue;

        std::stringstream ss(t_Line);
        std::string value;
        int t_Col = 0;

        while (std::getline(ss, value, ',') && t_Col < a_Cols)
        {
            t_Matrix(t_Row, t_Col++) = std::atof(value.c_str());
        }

        ++t_Row;
    }

    return t_Matrix;
}
