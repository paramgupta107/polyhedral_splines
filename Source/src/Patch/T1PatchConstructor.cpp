/* copyright(c)Jorg Peters [jorg.peters@gmail.com] */ 

#include "T1PatchConstructor.hpp"
#include "../Helper/HalfedgeOperation.hpp"
#include "../Helper/Helper.hpp"

EGMat128x18d T1PatchConstructor::getMask()
{
    EGMat128x18d t_Mask;
    t_Mask << \
    0,0,0,0,0,0,0,0,0.25,0.25,0,0,0,0.25,0.25,0,0,0,
    0,0,0,0,0,0,0,0,0.08333333333,0.4166666667,0,0,0,0.08333333333,0.4166666667,0,0,0,
    0,0,0,0,0,0,0,0,0,0.4166666667,0.08333333333,0,0,0,0.4166666667,0.08333333333,0,0,
    0,0,0,0,0,0,0,0,0,0.25,0.25,0,0,0,0.25,0.25,0,0,
    0,0,0,0,0,0,0,0,0.4166666667,0.4166666667,0,0,0,0.08333333333,0.08333333333,0,0,0,
    0,0,0,0,0,0,0,0,0.1481481481,0.6851851852,0,0,0,0.03703703704,0.1296296296,0,0,0,
    0,0,0,0,0,0,0,0,0,0.7037037037,0.1296296296,0,0,0,0.1481481481,0.01851851852,0,0,
    0,0,0,0,0,0,0,0,0,0.4166666667,0.4166666667,0,0,0,0.08333333333,0.08333333333,0,0,
    0,0,0,0,0.08333333333,0.08333333333,0,0,0.4166666667,0.4166666667,0,0,0,0,0,0,0,0,
    0,0,0,0,0.02777777778,0.1388888889,0,0,0.1759259259,0.6574074074,0,0,0,0,0,0,0,0,
    -0.0007716049383,-0.0007716049383,0.001543209877,0,0.02083333333,0.1319444444,0.01388888889,0,0,0.7060185185,0.1273148148,0,0,0,0.01157407407,-0.01157407407,0,0,
    -0.0005787037037,-0.0007073045267,0.001221707819,6.430041152e-05,0.01176697531,0.1155478395,0.04031635802,-0.0009645061728,-0.02443415638,0.4845036008,0.362654321,0.005722736626,0.004886831276,0,0.008680555556,-0.007716049383,-0.0009645061728,0,
    0,0,0,0,0.25,0.25,0,0,0.25,0.25,0,0,0,0,0,0,0,0,
    0,0,0,0,0.1111111111,0.3888888889,0,0,0.1111111111,0.3888888889,0,0,0,0,0,0,0,0,
    -0.002314814815,-0.002314814815,0.00462962963,0,0.0625,0.3958333333,0.04166666667,0,0,0.4236111111,0.07638888889,0,0,0,0.006944444444,-0.006944444444,0,0,
    -0.001736111111,-0.00212191358,0.003665123457,0.0001929012346,0.03144290123,0.3505015432,0.1201774691,-0.00212191358,-0.01543209877,0.2914737654,0.2175925926,0.003279320988,0.003086419753,0,0.005208333333,-0.00462962963,-0.0005787037037,0,
    0,0,0,0,0.25,0.25,0,0,0.25,0.25,0,0,0,0,0,0,0,0,
    0,0,0,0,0.1111111111,0.3888888889,0,0,0.1111111111,0.3888888889,0,0,0,0,0,0,0,0,
    -0.002314814815,-0.002314814815,0.00462962963,0,0.0625,0.3958333333,0.04166666667,0,0,0.4236111111,0.07638888889,0,0,0,0.006944444444,-0.006944444444,0,0,
    -0.001736111111,-0.00212191358,0.003665123457,0.0001929012346,0.03144290123,0.3505015432,0.1201774691,-0.00212191358,-0.01543209877,0.2914737654,0.2175925926,0.003279320988,0.003086419753,0,0.005208333333,-0.00462962963,-0.0005787037037,0,
    0,0,0,0,0.4166666667,0.4166666667,0,0,0.08333333333,0.08333333333,0,0,0,0,0,0,0,0,
    0,0,0,0,0.1944444444,0.6388888889,0,0,0.0462962963,0.1203703704,0,0,0,0,0,0,0,0,
    -0.003858024691,-0.003858024691,0.007716049383,0,0.1041666667,0.6597222222,0.06944444444,0,0,0.1412037037,0.02546296296,0,0,0,0.002314814815,-0.002314814815,0,0,
    -0.002893518519,-0.003536522634,0.006108539095,0.0003215020576,0.05111882716,0.5854552469,0.2000385802,-0.003279320988,-0.006430041152,0.09844393004,0.0725308642,0.0008359053498,0.00128600823,0,0.001736111111,-0.001543209877,-0.0001929012346,0,
    0.08333333333,0.08333333333,0,0,0.4166666667,0.4166666667,0,0,0,0,0,0,0,0,0,0,0,0,
    0.03703703704,0.1296296296,0,0,0.2222222222,0.6111111111,0,0,0,0,0,0,0,0,0,0,0,0,
    0.01851851852,0.1296296296,0.01851851852,0,0.1049382716,0.6604938272,0.06790123457,0,0,0,0,0,0,0,0,0,0,0,
    0.009259259259,0.1203703704,0.03703703704,0,0.0462962963,0.6018518519,0.1851851852,0,0,0,0,0,0,0,0,0,0,0,
    0.25,0.25,0,0,0.25,0.25,0,0,0,0,0,0,0,0,0,0,0,0,
    0.1388888889,0.3611111111,0,0,0.1388888889,0.3611111111,0,0,0,0,0,0,0,0,0,0,0,0,
    0.06481481481,0.3981481481,0.03703703704,0,0.06481481481,0.3981481481,0.03703703704,0,0,0,0,0,0,0,0,0,0,0,
    0.02777777778,0.3611111111,0.1111111111,0,0.02777777778,0.3611111111,0.1111111111,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0.25,0.25,0,0,0,0.25,0.25,0,0,
    0,0,0,0,0,0,0,0,0,0.1666666667,0.3333333333,0,0,0,0.1666666667,0.3333333333,0,0,
    0,0,0,0,0,0,0,0,0,0.1041666667,0.375,0.02083333333,0,0,0.1041666667,0.375,0.02083333333,0,
    0,0,0,0,0,0,0,0,0,0.0625,0.375,0.0625,0,0,0.0625,0.375,0.0625,0,
    0,0,0,0,0,0,0,0,0,0.4166666667,0.4166666667,0,0,0,0.08333333333,0.08333333333,0,0,
    0,0,0,0,0,0,0,0,0,0.2731481481,0.5601851852,0,0,0,0.05092592593,0.1157407407,0,0,
    0,0,0,0,0,0,0,0,0,0.1712962963,0.625,0.03703703704,0,0,0.03240740741,0.125,0.009259259259,0,
    0,0,0,0,0,0,0,0,0,0.1041666667,0.625,0.1041666667,0,0,0.02083333333,0.125,0.02083333333,0,
    -0.0005787037037,-0.0007073045267,0.001221707819,6.430041152e-05,0.01176697531,0.1155478395,0.04031635802,-0.0009645061728,-0.02443415638,0.4845036008,0.362654321,0.005722736626,0.004886831276,0,0.008680555556,-0.007716049383,-0.0009645061728,0,
    -0.0004822530864,-0.000675154321,0.00106095679,9.645061728e-05,0.007233796296,0.107349537,0.05353009259,-0.001446759259,-0.03665123457,0.373746142,0.4803240741,0.008584104938,0.007330246914,0,0.007233796296,-0.005787037037,-0.001446759259,0,
    -0.0001446759259,-0.0004340277778,0.0004340277778,0.0001446759259,0.002170138889,0.09678819444,0.06987847222,-0.002170138889,-0.01099537037,0.1954571759,0.625,0.01287615741,0.01099537037,0,0.002170138889,0,-0.002170138889,0,
    0,0,0,0,0,0.08333333333,0.08333333333,0,0,0.1041666667,0.625,0.1041666667,0,0,0,0,0,0,
    -0.001736111111,-0.00212191358,0.003665123457,0.0001929012346,0.03144290123,0.3505015432,0.1201774691,-0.00212191358,-0.01543209877,0.2914737654,0.2175925926,0.003279320988,0.003086419753,0,0.005208333333,-0.00462962963,-0.0005787037037,0,
    -0.001446759259,-0.002025462963,0.00318287037,0.0002893518519,0.01591435185,0.3278356481,0.1594328704,-0.00318287037,-0.02314814815,0.2254050926,0.2881944444,0.004918981481,0.00462962963,0,0.004340277778,-0.003472222222,-0.0008680555556,0,
    -0.0004340277778,-0.001302083333,0.001302083333,0.0004340277778,0.004774305556,0.2921006944,0.2078993056,-0.004774305556,-0.006944444444,0.1176215278,0.375,0.007378472222,0.006944444444,0,0.001302083333,0,-0.001302083333,0,
    0,0,0,0,0,0.25,0.25,0,0,0.0625,0.375,0.0625,0,0,0,0,0,0,
    -0.001736111111,-0.00212191358,0.003665123457,0.0001929012346,0.03144290123,0.3505015432,0.1201774691,-0.00212191358,-0.01543209877,0.2914737654,0.2175925926,0.003279320988,0.003086419753,0,0.005208333333,-0.00462962963,-0.0005787037037,0,
    -0.001446759259,-0.002025462963,0.00318287037,0.0002893518519,0.01591435185,0.3278356481,0.1594328704,-0.00318287037,-0.02314814815,0.2254050926,0.2881944444,0.004918981481,0.00462962963,0,0.004340277778,-0.003472222222,-0.0008680555556,0,
    -0.0004340277778,-0.001302083333,0.001302083333,0.0004340277778,0.004774305556,0.2921006944,0.2078993056,-0.004774305556,-0.006944444444,0.1176215278,0.375,0.007378472222,0.006944444444,0,0.001302083333,0,-0.001302083333,0,
    0,0,0,0,0,0.25,0.25,0,0,0.0625,0.375,0.0625,0,0,0,0,0,0,
    -0.002893518519,-0.003536522634,0.006108539095,0.0003215020576,0.05111882716,0.5854552469,0.2000385802,-0.003279320988,-0.006430041152,0.09844393004,0.0725308642,0.0008359053498,0.00128600823,0,0.001736111111,-0.001543209877,-0.0001929012346,0,
    -0.002411265432,-0.003375771605,0.005304783951,0.0004822530864,0.02459490741,0.5483217593,0.2653356481,-0.004918981481,-0.009645061728,0.07706404321,0.09606481481,0.001253858025,0.001929012346,0,0.001446759259,-0.001157407407,-0.0002893518519,0,
    -0.0007233796296,-0.002170138889,0.002170138889,0.0007233796296,0.007378472222,0.4874131944,0.3459201389,-0.007378472222,-0.002893518519,0.03978587963,0.125,0.001880787037,0.002893518519,0,0.0004340277778,0,-0.0004340277778,0,
    0,0,0,0,0,0.4166666667,0.4166666667,0,0,0.02083333333,0.125,0.02083333333,0,0,0,0,0,0,
    0.009259259259,0.1203703704,0.03703703704,0,0.0462962963,0.6018518519,0.1851851852,0,0,0,0,0,0,0,0,0,0,0,
    0.00462962963,0.1157407407,0.0462962963,0,0.01697530864,0.5725308642,0.2438271605,0,0,0,0,0,0,0,0,0,0,0,
    0,0.1064814815,0.06018518519,0,0,0.5138888889,0.3194444444,0,0,0,0,0,0,0,0,0,0,0,
    0,0.08333333333,0.08333333333,0,0,0.4166666667,0.4166666667,0,0,0,0,0,0,0,0,0,0,0,
    0.02777777778,0.3611111111,0.1111111111,0,0.02777777778,0.3611111111,0.1111111111,0,0,0,0,0,0,0,0,0,0,0,
    0.009259259259,0.3425925926,0.1481481481,0,0.009259259259,0.3425925926,0.1481481481,0,0,0,0,0,0,0,0,0,0,0,
    0,0.3055555556,0.1944444444,0,0,0.3055555556,0.1944444444,0,0,0,0,0,0,0,0,0,0,0,
    0,0.25,0.25,0,0,0.25,0.25,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0.0625,0.375,0.0625,0,0,0.0625,0.375,0.0625,0,
    0,0,0,0,0,0,0,0,0,0.02083333333,0.375,0.1041666667,0,0,0.02083333333,0.375,0.1041666667,0,
    0,0,0,0,0,0,0,0,0,0,0.3333333333,0.1666666667,0,0,0,0.3333333333,0.1666666667,0,
    0,0,0,0,0,0,0,0,0,0,0.25,0.25,0,0,0,0.25,0.25,0,
    0,0,0,0,0,0,0,0,0,0.1041666667,0.625,0.1041666667,0,0,0.02083333333,0.125,0.02083333333,0,
    0,0,0,0,0,0,0,0,0,0.03703703704,0.625,0.1712962963,0,0,0.009259259259,0.125,0.03240740741,0,
    0,0,0,0,0,0,0,0,0,0,0.5601851852,0.2731481481,0,0,0,0.1157407407,0.05092592593,0,
    0,0,0,0,0,0,0,0,0,0,0.4166666667,0.4166666667,0,0,0,0.08333333333,0.08333333333,0,
    0,0,0,0,0,0.08333333333,0.08333333333,0,0,0.1041666667,0.625,0.1041666667,0,0,0,0,0,0,
    0.0001446759259,0.0004340277778,-0.0004340277778,-0.0001446759259,-0.002170138889,0.06987847222,0.09678819444,0.002170138889,0.01099537037,0.01287615741,0.625,0.1954571759,-0.01099537037,0,-0.002170138889,0,0.002170138889,0,
    9.645061728e-05,0.00106095679,-0.000675154321,-0.0004822530864,-0.001446759259,0.05353009259,0.107349537,0.007233796296,0.007330246914,0.008584104938,0.4803240741,0.373746142,-0.03665123457,0,-0.001446759259,-0.005787037037,0.007233796296,0,
    6.430041152e-05,0.001221707819,-0.0007073045267,-0.0005787037037,-0.0009645061728,0.04031635802,0.1155478395,0.01176697531,0.004886831276,0.005722736626,0.362654321,0.4845036008,-0.02443415638,0,-0.0009645061728,-0.007716049383,0.008680555556,0,
    0,0,0,0,0,0.25,0.25,0,0,0.0625,0.375,0.0625,0,0,0,0,0,0,
    0.0004340277778,0.001302083333,-0.001302083333,-0.0004340277778,-0.004774305556,0.2078993056,0.2921006944,0.004774305556,0.006944444444,0.007378472222,0.375,0.1176215278,-0.006944444444,0,-0.001302083333,0,0.001302083333,0,
    0.0002893518519,0.00318287037,-0.002025462963,-0.001446759259,-0.00318287037,0.1594328704,0.3278356481,0.01591435185,0.00462962963,0.004918981481,0.2881944444,0.2254050926,-0.02314814815,0,-0.0008680555556,-0.003472222222,0.004340277778,0,
    0.0001929012346,0.003665123457,-0.00212191358,-0.001736111111,-0.00212191358,0.1201774691,0.3505015432,0.03144290123,0.003086419753,0.003279320988,0.2175925926,0.2914737654,-0.01543209877,0,-0.0005787037037,-0.00462962963,0.005208333333,0,
    0,0,0,0,0,0.25,0.25,0,0,0.0625,0.375,0.0625,0,0,0,0,0,0,
    0.0004340277778,0.001302083333,-0.001302083333,-0.0004340277778,-0.004774305556,0.2078993056,0.2921006944,0.004774305556,0.006944444444,0.007378472222,0.375,0.1176215278,-0.006944444444,0,-0.001302083333,0,0.001302083333,0,
    0.0002893518519,0.00318287037,-0.002025462963,-0.001446759259,-0.00318287037,0.1594328704,0.3278356481,0.01591435185,0.00462962963,0.004918981481,0.2881944444,0.2254050926,-0.02314814815,0,-0.0008680555556,-0.003472222222,0.004340277778,0,
    0.0001929012346,0.003665123457,-0.00212191358,-0.001736111111,-0.00212191358,0.1201774691,0.3505015432,0.03144290123,0.003086419753,0.003279320988,0.2175925926,0.2914737654,-0.01543209877,0,-0.0005787037037,-0.00462962963,0.005208333333,0,
    0,0,0,0,0,0.4166666667,0.4166666667,0,0,0.02083333333,0.125,0.02083333333,0,0,0,0,0,0,
    0.0007233796296,0.002170138889,-0.002170138889,-0.0007233796296,-0.007378472222,0.3459201389,0.4874131944,0.007378472222,0.002893518519,0.001880787037,0.125,0.03978587963,-0.002893518519,0,-0.0004340277778,0,0.0004340277778,0,
    0.0004822530864,0.005304783951,-0.003375771605,-0.002411265432,-0.004918981481,0.2653356481,0.5483217593,0.02459490741,0.001929012346,0.001253858025,0.09606481481,0.07706404321,-0.009645061728,0,-0.0002893518519,-0.001157407407,0.001446759259,0,
    0.0003215020576,0.006108539095,-0.003536522634,-0.002893518519,-0.003279320988,0.2000385802,0.5854552469,0.05111882716,0.00128600823,0.0008359053498,0.0725308642,0.09844393004,-0.006430041152,0,-0.0001929012346,-0.001543209877,0.001736111111,0,
    0,0.08333333333,0.08333333333,0,0,0.4166666667,0.4166666667,0,0,0,0,0,0,0,0,0,0,0,
    0,0.06018518519,0.1064814815,0,0,0.3194444444,0.5138888889,0,0,0,0,0,0,0,0,0,0,0,
    0,0.0462962963,0.1157407407,0.00462962963,0,0.2438271605,0.5725308642,0.01697530864,0,0,0,0,0,0,0,0,0,0,
    0,0.03703703704,0.1203703704,0.009259259259,0,0.1851851852,0.6018518519,0.0462962963,0,0,0,0,0,0,0,0,0,0,
    0,0.25,0.25,0,0,0.25,0.25,0,0,0,0,0,0,0,0,0,0,0,
    0,0.1944444444,0.3055555556,0,0,0.1944444444,0.3055555556,0,0,0,0,0,0,0,0,0,0,0,
    0,0.1481481481,0.3425925926,0.009259259259,0,0.1481481481,0.3425925926,0.009259259259,0,0,0,0,0,0,0,0,0,0,
    0,0.1111111111,0.3611111111,0.02777777778,0,0.1111111111,0.3611111111,0.02777777778,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0.25,0.25,0,0,0,0.25,0.25,0,
    0,0,0,0,0,0,0,0,0,0,0.08333333333,0.4166666667,0,0,0,0.08333333333,0.4166666667,0,
    0,0,0,0,0,0,0,0,0,0,0,0.4166666667,0.08333333333,0,0,0,0.4166666667,0.08333333333,
    0,0,0,0,0,0,0,0,0,0,0,0.25,0.25,0,0,0,0.25,0.25,
    0,0,0,0,0,0,0,0,0,0,0.4166666667,0.4166666667,0,0,0,0.08333333333,0.08333333333,0,
    0,0,0,0,0,0,0,0,0,0,0.1296296296,0.7037037037,0,0,0,0.01851851852,0.1481481481,0,
    0,0,0,0,0,0,0,0,0,0,0,0.6851851852,0.1481481481,0,0,0,0.1296296296,0.03703703704,
    0,0,0,0,0,0,0,0,0,0,0,0.4166666667,0.4166666667,0,0,0,0.08333333333,0.08333333333,
    6.430041152e-05,0.001221707819,-0.0007073045267,-0.0005787037037,-0.0009645061728,0.04031635802,0.1155478395,0.01176697531,0.004886831276,0.005722736626,0.362654321,0.4845036008,-0.02443415638,0,-0.0009645061728,-0.007716049383,0.008680555556,0,
    0,0.001543209877,-0.0007716049383,-0.0007716049383,0,0.01388888889,0.1319444444,0.02083333333,0,0,0.1273148148,0.7060185185,0,0,0,-0.01157407407,0.01157407407,0,
    0,0,0,0,0,0,0.1388888889,0.02777777778,0,0,0,0.6574074074,0.1759259259,0,0,0,0,0,
    0,0,0,0,0,0,0.08333333333,0.08333333333,0,0,0,0.4166666667,0.4166666667,0,0,0,0,0,
    0.0001929012346,0.003665123457,-0.00212191358,-0.001736111111,-0.00212191358,0.1201774691,0.3505015432,0.03144290123,0.003086419753,0.003279320988,0.2175925926,0.2914737654,-0.01543209877,0,-0.0005787037037,-0.00462962963,0.005208333333,0,
    0,0.00462962963,-0.002314814815,-0.002314814815,0,0.04166666667,0.3958333333,0.0625,0,0,0.07638888889,0.4236111111,0,0,0,-0.006944444444,0.006944444444,0,
    0,0,0,0,0,0,0.3888888889,0.1111111111,0,0,0,0.3888888889,0.1111111111,0,0,0,0,0,
    0,0,0,0,0,0,0.25,0.25,0,0,0,0.25,0.25,0,0,0,0,0,
    0.0001929012346,0.003665123457,-0.00212191358,-0.001736111111,-0.00212191358,0.1201774691,0.3505015432,0.03144290123,0.003086419753,0.003279320988,0.2175925926,0.2914737654,-0.01543209877,0,-0.0005787037037,-0.00462962963,0.005208333333,0,
    0,0.00462962963,-0.002314814815,-0.002314814815,0,0.04166666667,0.3958333333,0.0625,0,0,0.07638888889,0.4236111111,0,0,0,-0.006944444444,0.006944444444,0,
    0,0,0,0,0,0,0.3888888889,0.1111111111,0,0,0,0.3888888889,0.1111111111,0,0,0,0,0,
    0,0,0,0,0,0,0.25,0.25,0,0,0,0.25,0.25,0,0,0,0,0,
    0.0003215020576,0.006108539095,-0.003536522634,-0.002893518519,-0.003279320988,0.2000385802,0.5854552469,0.05111882716,0.00128600823,0.0008359053498,0.0725308642,0.09844393004,-0.006430041152,0,-0.0001929012346,-0.001543209877,0.001736111111,0,
    0,0.007716049383,-0.003858024691,-0.003858024691,0,0.06944444444,0.6597222222,0.1041666667,0,0,0.02546296296,0.1412037037,0,0,0,-0.002314814815,0.002314814815,0,
    0,0,0,0,0,0,0.6388888889,0.1944444444,0,0,0,0.1203703704,0.0462962963,0,0,0,0,0,
    0,0,0,0,0,0,0.4166666667,0.4166666667,0,0,0,0.08333333333,0.08333333333,0,0,0,0,0,
    0,0.03703703704,0.1203703704,0.009259259259,0,0.1851851852,0.6018518519,0.0462962963,0,0,0,0,0,0,0,0,0,0,
    0,0.01851851852,0.1296296296,0.01851851852,0,0.06790123457,0.6604938272,0.1049382716,0,0,0,0,0,0,0,0,0,0,
    0,0,0.1296296296,0.03703703704,0,0,0.6111111111,0.2222222222,0,0,0,0,0,0,0,0,0,0,
    0,0,0.08333333333,0.08333333333,0,0,0.4166666667,0.4166666667,0,0,0,0,0,0,0,0,0,0,
    0,0.1111111111,0.3611111111,0.02777777778,0,0.1111111111,0.3611111111,0.02777777778,0,0,0,0,0,0,0,0,0,0,
    0,0.03703703704,0.3981481481,0.06481481481,0,0.03703703704,0.3981481481,0.06481481481,0,0,0,0,0,0,0,0,0,0,
    0,0,0.3611111111,0.1388888889,0,0,0.3611111111,0.1388888889,0,0,0,0,0,0,0,0,0,0,
    0,0,0.25,0.25,0,0,0.25,0.25,0,0,0,0,0,0,0,0,0,0;

    return t_Mask;
}

bool T1PatchConstructor::isSamePatchType(const FaceHandle& a_FaceHandle)
{
    // Check is the face a Pentagon
    if(!Helper::is_pentagon(m_Mesh, a_FaceHandle))
    {
        return false;
    }

    // Check Pentagon has 4 4D verts and only 1 3D vert
    if(!isPentagonTjunction(a_FaceHandle))
    {
        return false;
    }

    // Check there are 9 neighbor faces around the pentagon
    auto t_FirstLayerFaces = Helper::init_neighbor_faces(m_Mesh, a_FaceHandle);
    if(!Helper::has_9_neighbor_faces(t_FirstLayerFaces))
    {
        return false;
    }

    // Check whether neighbor faces are all quad
    if(!Helper::are_faces_all_quads(m_Mesh, t_FirstLayerFaces))
    {
        return false;
    }

    std::cout << "T1" << std::endl;

    return true;
}


/*
 * Check if the pentagon only has one tjunction
 */
bool T1PatchConstructor::isPentagonTjunction(const FaceHandle& a_FaceHandle)
{
    const int t_NumOf4ValenceVertsForPenTJ = 4;
    const int t_NumOf3ValenceVertsForPenTJ = 1;
    int t_NumOf4ValenceVerts = 0;
    int t_NumOf3ValenceVerts = 0;
    for (auto t_FVIt = m_Mesh.cfv_iter(a_FaceHandle); t_FVIt.is_valid(); ++t_FVIt)
    {
        if (Helper::is_vert_4_valence(m_Mesh, *t_FVIt))
        {
            t_NumOf4ValenceVerts++;
        }
        else if (Helper::is_vert_3_valence(m_Mesh, *t_FVIt))
        {
            t_NumOf3ValenceVerts++;
        }
    }
    return (t_NumOf4ValenceVertsForPenTJ==t_NumOf4ValenceVerts
         && t_NumOf3ValenceVertsForPenTJ==t_NumOf3ValenceVerts) ? true : false;
}


std::vector<Patch> T1PatchConstructor::getPatch(const FaceHandle& a_FaceHandle)
{
    // Get neighbor verts
    auto t_NBVerts = initNeighborVerts(a_FaceHandle);

    // Convert Neighbor Verts to Eigen matrix type
    auto t_EGNBVerts = Helper::verthandles_to_EGPoints(m_Mesh, t_NBVerts);

    // Generate patch
    auto t_BBcoefs = m_Mask * t_EGNBVerts;

    const int a_NumOfPatch = 8;
    return Helper::EGPoints_to_patches(a_NumOfPatch, "Group 3 T1", t_BBcoefs);
}


/*
 * Get the neighbor verts
 *      0 - 1 - 2 - 3
 *      |   |   |   |
 *      4 - 5 - 6 - 7
 *     /   /     \   \
 *    8 - 9 -10- 11 - 12
 *    |   |   |   |   |
 *   13 -14 -15- 16 - 17
 */
std::vector<VertexHandle> T1PatchConstructor::initNeighborVerts(const FaceHandle& a_FaceHandle)
{
    // Init vector for neighbor points
    const int t_NumOfVerts = 18;
    std::vector<VertexHandle> t_NBVerts;
    Helper::set_vert_vector_to_default(t_NumOfVerts, t_NBVerts);

    // Find 10 11 6 5 9  **Verts from getVertsOfFace are in clockwise order
    auto t_PenVerts = Helper::get_verts_of_face(m_Mesh, a_FaceHandle);
    std::vector<int> t_PenVertOrder{10, 9, 5, 6, 11};
    while(true)
    {
        //rotate penverts until its first element is 3D vert
        if(Helper::is_vert_3_valence(m_Mesh, t_PenVerts[0]))
        {
            break;
        }
        std::rotate(t_PenVerts.begin(),t_PenVerts.begin()+1,t_PenVerts.end());
    }
    for(int i=0; i<t_PenVerts.size(); i++)
    {
        t_NBVerts[t_PenVertOrder[i]] = t_PenVerts[i];
    }

    // Find 15 and the halfedge (10->15)
    MeshType::HalfedgeHandle t_CurrentHef;
    for(auto t_VHIt = m_Mesh.cvoh_iter(t_NBVerts[10]); t_VHIt.is_valid(); ++t_VHIt)
    {
        auto t_NextHalfedge = m_Mesh.next_halfedge_handle(*t_VHIt);
        auto t_Vert = m_Mesh.from_vertex_handle(t_NextHalfedge);
        bool t_IsVertNotInPen = std::find(t_PenVerts.begin(), t_PenVerts.end(), t_Vert) != t_PenVerts.end();
        if(!t_IsVertNotInPen)
        {
            t_NBVerts[15] = t_Vert;
            t_CurrentHef = *t_VHIt;
            break;
        }
    }

    // Find 4 corners 14 13 18 -> 4 0 1 -> 2 3 7 -> 12 17 16
    std::vector<std::vector<int>> t_GetVertOrder{{14, 13, 8}, {4, 0, 1}, {2, 3, 7}, {12, 17, 16}};
    // Operation for one corner. Operations: 1=next 2=previous 3=opposite 4=get
    std::vector<int> t_CornerOperation{1, 1, 4, 3, 1, 1, 4, 1, 4, 3};

    HalfedgeOperation::init_verts(m_Mesh, t_CurrentHef, t_NBVerts, t_GetVertOrder, t_CornerOperation);

    return t_NBVerts;
}
